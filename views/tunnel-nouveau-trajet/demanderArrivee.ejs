<%-include('../includes/header.ejs')%>
<!-- Google Maps JavaScript library -->

<link rel='stylesheet' href='/stylesheets/map.css' />
</head>
<%-include('../includes/navigation.ejs')%>

<body>
    <h1>Ou souhaitez vous aller ?</h1>

    <div class="row">
        <form method="post" action="/demander-arrivee">
            <div class="col col-lg-6">
                <input id="pac-input" class="controls" type="text" placeholder="Adresse d'arrivÃ©e'" value='<%=trajet.lieu_arrivee%>'>
            </div>
            <div id="map" style="height: 300px;width: 560px"></div>
            <br>
            <input type="hidden" name="lat" id="lat">
            <input type="hidden" name="lng" id="lng">
            <input type="hidden" name="location" id="location" value='<%=trajet.lieu_arrivee%>'>
            <input type='hidden' name="trajetId" value="<%=trajet._id%>">
            <Button type='submit'>Suivant</Button>

    </div>
    </form>
    </div>
    <!--End of row-->
    </div>
    <!--End of conatiner-->
    <script
        src="https://maps.googleapis.com/maps/api/js?key=<%=GOOGLE_API_KEY%>&libraries=places"></script>
    <script>


        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: {
                    lat: 48.227524, lng: 3.2543265
                },
                zoom: 13.7
            });
            var input = /** @type {!HTMLInputElement} */(
                document.getElementById('pac-input'));

            var types = document.getElementById('type-selector');
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
            map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            var infowindow = new google.maps.InfoWindow();
            var marker = new google.maps.Marker({
                map: map,
                anchorPoint: new google.maps.Point(0, -29)
            });

            autocomplete.addListener('place_changed', function () {
                infowindow.close();
                marker.setVisible(false);
                var place = autocomplete.getPlace();

                if (!place.geometry) {
                    // User entered the name of a Place that was not suggested and
                    // pressed the Enter key, or the Place Details request failed.
                    window.alert("No details available for input: '" + place.name + "'");
                    return;
                }

                // If the place has a geometry, then present it on a map.
                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17);  // Why 17? Because it looks good.
                }
                marker.setIcon(/** @type {google.maps.Icon} */({
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(35, 35)
                }));
                marker.setPosition(place.geometry.location);
                marker.setVisible(true);
                var item_Lat = place.geometry.location.lat()
                var item_Lng = place.geometry.location.lng()
                var item_Location = place.formatted_address;
                //alert("Lat= "+item_Lat+"_____Lang="+item_Lng+"_____Location="+item_Location);
                $("#lat").val(item_Lat);
                $("#lng").val(item_Lng);
                $("#location").val(item_Location);
                var address = '';
                if (place.address_components) {
                    address = [
                        (place.address_components[0] && place.address_components[0].short_name || ''),
                        (place.address_components[1] && place.address_components[1].short_name || ''),
                        (place.address_components[2] && place.address_components[2].short_name || '')
                    ].join(' ');
                }

                infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
                infowindow.open(map, marker);
            });

            // Sets a listener on a radio button to change the filter type on Places
            // Autocomplete.
            function setupClickListener(id, types) {
                var radioButton = document.getElementById(id);
                radioButton.addEventListener('click', function () {
                    autocomplete.setTypes(types);
                });
            }

            setupClickListener('changetype-all', []);
            setupClickListener('changetype-address', ['address']);
            setupClickListener('changetype-establishment', ['establishment']);
            setupClickListener('changetype-geocode', ['geocode']);
        }
    </script>
    <script
        src="https://maps.googleapis.com/maps/api/js?key=<%=GOOGLE_API_KEY%>&libraries=places&callback=initMap"
        async defer></script>
</body>
<%-include('../includes/footer.ejs')%>

</html>